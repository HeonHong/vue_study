{"ast":null,"code":"import axios from \"axios\";\nimport { computed, onMounted, reactive, ref, toRefs } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  //eslint-disable-next-line\n  name: \"MyPage\",\n  props: {\n    one: Number,\n    two: Number\n  },\n  //   setup(props, context) {\n  setup(props) {\n    //created랑 비슷하다\n\n    //data\n    let follower = ref([]); //primitive 타입에 사용\n    let test = reactive({\n      name: \"kim\"\n    }); //ref랑 동일한 역할. object, array에 사용\n    test;\n\n    //실시간 반영을 원하는 경우 ref를 사용하는데\n    //여러 개의 데이터를 담아야하는 경우 toRefs를 사용한다.\n    //es6 destructuring 문법\n    let {\n      one,\n      two\n    } = toRefs(props);\n    console.log(one.value);\n    console.log(two.value);\n    onMounted(() => {\n      axios.get(\"/follower.json\").then(res => {\n        follower.value = res.data;\n      });\n    });\n\n    // watch(one,()=>{\n    //     //변경시 실행하고 싶은 코드\n    // });\n\n    let result = computed(() => {\n      return follower.value.length;\n    });\n    console.log(result.value);\n    return {\n      follower\n    };\n  },\n  data() {\n    return {};\n  }\n};","map":{"version":3,"names":["axios","computed","onMounted","reactive","ref","toRefs","useStore","name","props","one","Number","two","setup","follower","test","console","log","value","get","then","res","data","result","length"],"sources":["C:\\Users\\ghdgj\\Desktop\\vue\\vue_study\\codingApple\\vuestagram\\src\\components\\MyPage.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px\">\r\n    <h4>팔로워</h4>\r\n    <input placeholder=\"?\" />\r\n    <div class=\"post-header\" v-for=\"(items, i) in follower\" :key=\"i\">\r\n      <div\r\n        class=\"profile\"\r\n        :style=\"`background-image : url(${items.image})`\"\r\n      ></div>\r\n      <span class=\"profile-name\">{{ items.name }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport { computed, onMounted, reactive, ref, toRefs } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  //eslint-disable-next-line\r\n  name: \"MyPage\",\r\n  props: {\r\n    one: Number,\r\n    two: Number,\r\n  },\r\n  //   setup(props, context) {\r\n  setup(props) {\r\n    //created랑 비슷하다\r\n\r\n    //data\r\n    let follower = ref([]); //primitive 타입에 사용\r\n    let test = reactive({ name: \"kim\" }); //ref랑 동일한 역할. object, array에 사용\r\n    test;\r\n\r\n    //실시간 반영을 원하는 경우 ref를 사용하는데\r\n    //여러 개의 데이터를 담아야하는 경우 toRefs를 사용한다.\r\n    //es6 destructuring 문법\r\n    let { one, two } = toRefs(props);\r\n    console.log(one.value);\r\n    console.log(two.value);\r\n\r\n    onMounted(() => {\r\n      axios.get(\"/follower.json\").then((res) => {\r\n        follower.value = res.data;\r\n      });\r\n    });\r\n\r\n    // watch(one,()=>{\r\n    //     //변경시 실행하고 싶은 코드\r\n    // });\r\n\r\n    let result = computed(() => {\r\n      return follower.value.length;\r\n    });\r\n    console.log(result.value);\r\n\r\n\r\n\r\n    return { follower };\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n};\r\n</script>\r\n<style>\r\n/* scooped사용하면 해당 페이지에만 적용하는 css파일 생성 가능 */\r\n</style>\r\n"],"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,MAAK,QAAS,KAAK;AAChE,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACb;EACAC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;IACLC,GAAG,EAAEC,MAAM;IACXC,GAAG,EAAED;EACP,CAAC;EACD;EACAE,KAAKA,CAACJ,KAAK,EAAE;IACX;;IAEA;IACA,IAAIK,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC,EAAE;IACxB,IAAIU,IAAG,GAAIX,QAAQ,CAAC;MAAEI,IAAI,EAAE;IAAM,CAAC,CAAC,EAAE;IACtCO,IAAI;;IAEJ;IACA;IACA;IACA,IAAI;MAAEL,GAAG;MAAEE;IAAI,IAAIN,MAAM,CAACG,KAAK,CAAC;IAChCO,OAAO,CAACC,GAAG,CAACP,GAAG,CAACQ,KAAK,CAAC;IACtBF,OAAO,CAACC,GAAG,CAACL,GAAG,CAACM,KAAK,CAAC;IAEtBf,SAAS,CAAC,MAAM;MACdF,KAAK,CAACkB,GAAG,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACxCP,QAAQ,CAACI,KAAI,GAAIG,GAAG,CAACC,IAAI;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA;IACA;;IAEA,IAAIC,MAAK,GAAIrB,QAAQ,CAAC,MAAM;MAC1B,OAAOY,QAAQ,CAACI,KAAK,CAACM,MAAM;IAC9B,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAACM,MAAM,CAACL,KAAK,CAAC;IAIzB,OAAO;MAAEJ;IAAS,CAAC;EACrB,CAAC;EACDQ,IAAIA,CAAA,EAAG;IACL,OAAO,CAAC,CAAC;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}