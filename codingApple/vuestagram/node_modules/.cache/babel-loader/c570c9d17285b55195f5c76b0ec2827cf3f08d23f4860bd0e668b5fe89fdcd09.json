{"ast":null,"code":"import Container from \"./components/Container\";\nimport instaData from \"./assets/InstaData\";\nimport axios from \"axios\";\nimport { mapMutations, mapState } from 'vuex';\nexport default {\n  name: \"App\",\n  components: {\n    Container\n  },\n  //부모 컴포넌트\n  mounted() {\n    this.emitter.on(\"dataToApp\", filter => {\n      this.filter = filter;\n    });\n  },\n  data() {\n    return {\n      instaData,\n      clicked: 0,\n      isShow0: true,\n      isShow1: false,\n      isShow2: false,\n      step: 0,\n      url: \"\",\n      content: \"write!\",\n      filter: \"\",\n      counter: 0\n    };\n  },\n  computed: {\n    //처음 로드 됐을 때, 해당 값을 가지고 있는다. 사용한다고 무조건 재실행하지 않는다.\n    //주는 데이터 값이 바뀌면 새로 진행\n    //계산 결과 저장용 함수\n    // now2(){\n    //   return new Date();\n    // }\n    // ex 게시물 양이 엄청 많을 때, 일부 데이터만 가지고 계속 변형이나 특정 작업을 하는 경우.\n\n    //일반적으로 store의 값을 이용할 때 computed에 저장하고 사용한다.\n    // name(){\n    //   //항상 계산된 값을 리턴 시켜줘야한다.\n    //   return this.$store.state.name\n    // },\n\n    //vuex state를 한 번에 꺼내쓰는 문법\n    //spread랑 같이 쓰면 store에 있는 state 값 다 복사\n    //위의 name처럼 작성하지 않고 사용 가능\n    ...mapState(['name', 'age', 'likes']),\n    //다른 이름으로 작성하고 싶은 경우에 object형으로 작성\n    ...mapState({\n      named: 'name'\n    })\n  },\n  methods: {\n    //mutations 사용 원하는 경우. mapActions도 가능\n    ...mapMutations(['setMore', 'like', 'addAge']),\n    // now(){\n    //   return new Date();\n    // },\n    more() {\n      axios.get(`https://codingapple1.github.io/vue/more${this.clicked++}.json`).then(res => {\n        //function대신 arrow function 사용하면 안에서 this가 바깥의 데이터를 의미한다.\n        //function은 this를 재정의한다.\n        this.instaData.push(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // showing(num){\n    //   // console.log(num);\n    //   this.step=num;\n    // },\n    upload(e) {\n      // const file = e.target.files[0];\n      // const ext = file.name.split(\".\").pop();\n      // 유효성 검사 다시 만들어보기\n      // if (!['gif', 'jpg', 'jpeg', 'png', 'bmp' ,'ico', 'apng'].includes(ext)) {\n      //   alert(\"허용되지 않는 파일 형식입니다.\");\n      // }\n\n      //e.target.files를 통째로 넣으려고 하면 안됨.\n      //binary데이터를 다룰 때 blob이라는 object에 넣는다.\n      this.url = URL.createObjectURL(e.target.files[0]);\n      this.step++;\n    },\n    publish() {\n      var myPost = {\n        name: \"Kim Hyun\",\n        userImage: \"https://picsum.photos/100?random=3\",\n        postImage: this.url,\n        likes: 36,\n        date: \"May 15\",\n        liked: false,\n        content: this.content,\n        filter: this.filter\n      };\n      //array의 첫번째에 자료추가\n      this.instaData.unshift(myPost);\n      this.step = 0;\n      this.filter = \"\";\n    },\n    textChange(changedText) {\n      this.content = changedText;\n    }\n  }\n};","map":{"version":3,"names":["Container","instaData","axios","mapMutations","mapState","name","components","mounted","emitter","on","filter","data","clicked","isShow0","isShow1","isShow2","step","url","content","counter","computed","named","methods","more","get","then","res","push","catch","err","console","log","upload","e","URL","createObjectURL","target","files","publish","myPost","userImage","postImage","likes","date","liked","unshift","textChange","changedText"],"sources":["C:\\Users\\ghdgj\\Desktop\\vue\\vue_study\\codingApple\\vuestagram\\src\\App.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div class=\"header\">\r\n    <ul class=\"header-button-left\">\r\n      <li @click=\"step = 0\">Cancel</li>\r\n    </ul>\r\n    <ul class=\"header-button-right\">\r\n      <li v-if=\"step == 1\" @click=\"step++\">Next</li>\r\n      <li v-if=\"step == 2\" @click=\"publish\">Publish</li>\r\n    </ul>\r\n    <img src=\"./assets/logo.png\" class=\"logo\" />\r\n  </div>\r\n\r\n  <!--   예시로 작성한 것이지만 vuex 관습상 컴포넌트 내에서 직접적으로 데이터 변경은 하지 않는다.\r\n  따라서 1. store.js에서 수정 방법 정의\r\n  2. 컴포넌트에서 그 방법을 사용하여 수정(store.js에 부탁)\r\n  <h4>안녕 {{ $store.state.name }}</h4>\r\n  <button @click=\"$store.state.name='park'\">버튼</button> -->\r\n\r\n  <!-- <h4>안녕 {{ $store.state.name }}</h4>\r\n  <button @click=\"$store.commit('nameChange')\">버튼</button>\r\n  <h4>난 {{ $store.state.age }}살이야</h4>\r\n  <button @click=\"$store.commit('addAge', 10)\">버튼</button> -->\r\n\r\n  <!--mapMutations로 대체  -->\r\n  <!-- <h4>난 {{ $store.state.age }}살이야</h4>\r\n  <button @click=\"addAge(10)\">버튼</button> -->\r\n\r\n  <!-- <p>{{ $store.state.more }}</p>\r\n  <button @click=\"$store.dispatch('getData')\">더보기 버튼</button> -->\r\n\r\n  <!-- <Container :instaData=\"instaData\" :step=\"step\" :url=\"url\" :content=\"content\" @text=\"(e)=>content=e\"/> -->\r\n  <Container\r\n    :instaData=\"instaData\"\r\n    :step=\"step\"\r\n    :url=\"url\"\r\n    :content=\"content\"\r\n    @text=\"textChange\"\r\n    :filter=\"filter\"\r\n  />\r\n  <button @click=\"more\">더보기</button>\r\n\r\n  <!-- <p>{{now()}} {{counter}}</p> -->\r\n  <!-- now2는 소괄호 없이 작성. 계산한 state값을 가진다고 생각하면 된다. 일종의 데이터 값 -->\r\n  <!-- 재렌더링한다고 값이 계속 변하는 것이 아니다. -->\r\n  <!-- <p>{{now2}} {{counter}}</p> -->\r\n  <!-- <button @click=\"counter++\">버튼</button> -->\r\n\r\n  <div class=\"footer\">\r\n    <ul class=\"footer-button-plus\">\r\n      <!-- image만 받는 제한은 아니고 이미지 파일만 뜨게끔 설정하는 것이라서 근본적인 해결책은 아니다. -->\r\n      <input\r\n        @change=\"upload\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        id=\"file\"\r\n        class=\"inputfile\"\r\n      />\r\n      <label for=\"file\" class=\"input-plus\">+</label>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- <div v-if=\"step == 0\">내용0</div>\r\n  <div v-if=\"step == 1\">내용1</div>\r\n  <div v-if=\"step == 2\">내용2</div>\r\n\r\n  <button @click=\"showing(0)\">버튼0</button>\r\n  <button @click=\"showing(1)\">버튼1</button>\r\n  <button @click=\"showing(2)\">버튼2</button> -->\r\n</template>\r\n\r\n<script>\r\nimport Container from \"./components/Container\";\r\nimport instaData from \"./assets/InstaData\";\r\nimport axios from \"axios\";\r\nimport {mapMutations, mapState} from 'vuex'\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    Container,\r\n  },\r\n  //부모 컴포넌트\r\n  mounted() {\r\n    this.emitter.on(\"dataToApp\", (filter) => {\r\n      this.filter = filter;\r\n    });\r\n  },\r\n  data() {\r\n    return {\r\n      instaData,\r\n      clicked: 0,\r\n      isShow0: true,\r\n      isShow1: false,\r\n      isShow2: false,\r\n      step: 0,\r\n      url: \"\",\r\n      content: \"write!\",\r\n      filter: \"\",\r\n      counter:0,\r\n    };\r\n  },\r\n  computed: {\r\n    //처음 로드 됐을 때, 해당 값을 가지고 있는다. 사용한다고 무조건 재실행하지 않는다.\r\n    //주는 데이터 값이 바뀌면 새로 진행\r\n    //계산 결과 저장용 함수\r\n    // now2(){\r\n    //   return new Date();\r\n    // }\r\n    // ex 게시물 양이 엄청 많을 때, 일부 데이터만 가지고 계속 변형이나 특정 작업을 하는 경우.\r\n\r\n    //일반적으로 store의 값을 이용할 때 computed에 저장하고 사용한다.\r\n    // name(){\r\n    //   //항상 계산된 값을 리턴 시켜줘야한다.\r\n    //   return this.$store.state.name\r\n    // },\r\n\r\n    //vuex state를 한 번에 꺼내쓰는 문법\r\n    //spread랑 같이 쓰면 store에 있는 state 값 다 복사\r\n    //위의 name처럼 작성하지 않고 사용 가능\r\n    ...mapState(['name','age','likes']),\r\n    //다른 이름으로 작성하고 싶은 경우에 object형으로 작성\r\n    ...mapState({named:'name'}),\r\n  },\r\n  methods: {\r\n    //mutations 사용 원하는 경우. mapActions도 가능\r\n    ...mapMutations(['setMore','like','addAge']),\r\n\r\n\r\n    // now(){\r\n    //   return new Date();\r\n    // },\r\n    more() {\r\n      axios\r\n        .get(`https://codingapple1.github.io/vue/more${this.clicked++}.json`)\r\n        .then((res) => {\r\n          //function대신 arrow function 사용하면 안에서 this가 바깥의 데이터를 의미한다.\r\n          //function은 this를 재정의한다.\r\n          this.instaData.push(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    // showing(num){\r\n    //   // console.log(num);\r\n    //   this.step=num;\r\n    // },\r\n    upload(e) {\r\n      // const file = e.target.files[0];\r\n      // const ext = file.name.split(\".\").pop();\r\n      // 유효성 검사 다시 만들어보기\r\n      // if (!['gif', 'jpg', 'jpeg', 'png', 'bmp' ,'ico', 'apng'].includes(ext)) {\r\n      //   alert(\"허용되지 않는 파일 형식입니다.\");\r\n      // }\r\n\r\n      //e.target.files를 통째로 넣으려고 하면 안됨.\r\n      //binary데이터를 다룰 때 blob이라는 object에 넣는다.\r\n      this.url = URL.createObjectURL(e.target.files[0]);\r\n      this.step++;\r\n    },\r\n    publish() {\r\n      var myPost = {\r\n        name: \"Kim Hyun\",\r\n        userImage: \"https://picsum.photos/100?random=3\",\r\n        postImage: this.url,\r\n        likes: 36,\r\n        date: \"May 15\",\r\n        liked: false,\r\n        content: this.content,\r\n        filter: this.filter,\r\n      };\r\n      //array의 첫번째에 자료추가\r\n      this.instaData.unshift(myPost);\r\n      this.step = 0;\r\n      this.filter = \"\";\r\n    },\r\n    textChange(changedText) {\r\n      this.content = changedText;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n/* @import 'style.css'; */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n#app {\r\n  box-sizing: border-box;\r\n  font-family: \"consolas\";\r\n  margin-top: 60px;\r\n  width: 100%;\r\n  max-width: 460px;\r\n  margin: auto;\r\n  position: relative;\r\n  border-right: 1px solid #eee;\r\n  border-left: 1px solid #eee;\r\n}\r\nul {\r\n  padding: 5px;\r\n  list-style-type: none;\r\n}\r\n.logo {\r\n  width: 22px;\r\n  margin: auto;\r\n  display: block;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 13px;\r\n}\r\n.header {\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: white;\r\n  padding-bottom: 8px;\r\n  position: sticky;\r\n  top: 0;\r\n}\r\n.header-button-left {\r\n  color: skyblue;\r\n  float: left;\r\n  width: 50px;\r\n  padding-left: 20px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n.header-button-right {\r\n  color: skyblue;\r\n  float: right;\r\n  width: 50px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n.footer {\r\n  width: 100%;\r\n  position: sticky;\r\n  bottom: 0;\r\n  padding-bottom: 10px;\r\n  background-color: white;\r\n}\r\n.footer-button-plus {\r\n  width: 80px;\r\n  margin: auto;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  padding-top: 12px;\r\n}\r\n.sample-box {\r\n  width: 100%;\r\n  height: 600px;\r\n  background-color: bisque;\r\n}\r\n.inputfile {\r\n  display: none;\r\n}\r\n.input-plus {\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAwEA,OAAOA,SAAQ,MAAO,wBAAwB;AAC9C,OAAOC,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,KAAI,MAAO,OAAO;AACzB,SAAQC,YAAY,EAAEC,QAAQ,QAAO,MAAK;AAE1C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVN;EACF,CAAC;EACD;EACAO,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,WAAW,EAAGC,MAAM,IAAK;MACvC,IAAI,CAACA,MAAK,GAAIA,MAAM;IACtB,CAAC,CAAC;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLV,SAAS;MACTW,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE,QAAQ;MACjBR,MAAM,EAAE,EAAE;MACVS,OAAO,EAAC;IACV,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA,GAAGhB,QAAQ,CAAC,CAAC,MAAM,EAAC,KAAK,EAAC,OAAO,CAAC,CAAC;IACnC;IACA,GAAGA,QAAQ,CAAC;MAACiB,KAAK,EAAC;IAAM,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP;IACA,GAAGnB,YAAY,CAAC,CAAC,SAAS,EAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;IAG5C;IACA;IACA;IACAoB,IAAIA,CAAA,EAAG;MACLrB,KAAI,CACDsB,GAAG,CAAE,0CAAyC,IAAI,CAACZ,OAAO,EAAG,OAAM,EACnEa,IAAI,CAAEC,GAAG,IAAK;QACb;QACA;QACA,IAAI,CAACzB,SAAS,CAAC0B,IAAI,CAACD,GAAG,CAACf,IAAI,CAAC;MAC/B,CAAC,EACAiB,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN,CAAC;IACD;IACA;IACA;IACA;IACAG,MAAMA,CAACC,CAAC,EAAE;MACR;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA,IAAI,CAAChB,GAAE,GAAIiB,GAAG,CAACC,eAAe,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MACjD,IAAI,CAACrB,IAAI,EAAE;IACb,CAAC;IACDsB,OAAOA,CAAA,EAAG;MACR,IAAIC,MAAK,GAAI;QACXlC,IAAI,EAAE,UAAU;QAChBmC,SAAS,EAAE,oCAAoC;QAC/CC,SAAS,EAAE,IAAI,CAACxB,GAAG;QACnByB,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,KAAK;QACZ1B,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBR,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;MACD;MACA,IAAI,CAACT,SAAS,CAAC4C,OAAO,CAACN,MAAM,CAAC;MAC9B,IAAI,CAACvB,IAAG,GAAI,CAAC;MACb,IAAI,CAACN,MAAK,GAAI,EAAE;IAClB,CAAC;IACDoC,UAAUA,CAACC,WAAW,EAAE;MACtB,IAAI,CAAC7B,OAAM,GAAI6B,WAAW;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}