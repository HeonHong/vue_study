{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from './assets/logo.png';\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"header-button-left\"\n};\nconst _hoisted_3 = {\n  class: \"header-button-right\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"logo\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"footer\"\n};\nconst _hoisted_6 = {\n  class: \"footer-button-plus\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"file\",\n  class: \"input-plus\"\n}, \"+\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Container = _resolveComponent(\"Container\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [_createElementVNode(\"li\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.step = 0)\n  }, \"Cancel\")]), _createElementVNode(\"ul\", _hoisted_3, [$data.step == 1 ? (_openBlock(), _createElementBlock(\"li\", {\n    key: 0,\n    onClick: _cache[1] || (_cache[1] = $event => $data.step++)\n  }, \"Next\")) : _createCommentVNode(\"v-if\", true), $data.step == 2 ? (_openBlock(), _createElementBlock(\"li\", {\n    key: 1,\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.publish && $options.publish(...args))\n  }, \"Publish\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_4]), _createCommentVNode(\" <Container :instaData=\\\"instaData\\\" :step=\\\"step\\\" :url=\\\"url\\\" :content=\\\"content\\\" @text=\\\"(e)=>content=e\\\"/> \"), _createVNode(_component_Container, {\n    instaData: $data.instaData,\n    step: $data.step,\n    url: $data.url,\n    content: $data.content,\n    onText: $options.textChange\n  }, null, 8 /* PROPS */, [\"instaData\", \"step\", \"url\", \"content\", \"onText\"]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.more && $options.more(...args))\n  }, \"더보기\"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"ul\", _hoisted_6, [_createCommentVNode(\" image만 받는 제한은 아니고 이미지 파일만 뜨게끔 설정하는 것이라서 근본적인 해결책은 아니다. \"), _createElementVNode(\"input\", {\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.upload && $options.upload(...args)),\n    type: \"file\",\n    accept: \"image/*\",\n    multiple: \"\",\n    id: \"file\",\n    class: \"inputfile\"\n  }, null, 32 /* HYDRATE_EVENTS */), _hoisted_7])]), _createCommentVNode(\" <div v-if=\\\"step == 0\\\">내용0</div>\\n  <div v-if=\\\"step == 1\\\">내용1</div>\\n  <div v-if=\\\"step == 2\\\">내용2</div>\\n\\n  <button @click=\\\"showing(0)\\\">버튼0</button>\\n  <button @click=\\\"showing(1)\\\">버튼1</button>\\n  <button @click=\\\"showing(2)\\\">버튼2</button> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","for","_hoisted_1","_hoisted_2","onClick","_cache","$event","$data","step","_hoisted_3","_createElementBlock","args","$options","publish","_hoisted_4","_createCommentVNode","_createVNode","_component_Container","instaData","url","content","onText","textChange","more","_hoisted_5","_hoisted_6","onChange","upload","type","accept","multiple","id","_hoisted_7"],"sources":["C:\\Users\\ghdgj\\Desktop\\vue\\vue_study\\codingApple\\vuestagram\\src\\App.vue"],"sourcesContent":["<template lang=\"\">\n  <div class=\"header\">\n    <ul class=\"header-button-left\">\n      <li @click=\"step = 0\">Cancel</li>\n    </ul>\n    <ul class=\"header-button-right\">\n      <li v-if=\"step == 1\" @click=\"step++\">Next</li>\n      <li v-if=\"step == 2\" @click=\"publish\">Publish</li>\n    </ul>\n    <img src=\"./assets/logo.png\" class=\"logo\" />\n  </div>\n\n  <!-- <Container :instaData=\"instaData\" :step=\"step\" :url=\"url\" :content=\"content\" @text=\"(e)=>content=e\"/> -->\n  <Container\n    :instaData=\"instaData\"\n    :step=\"step\"\n    :url=\"url\"\n    :content=\"content\"\n    @text=\"textChange\"\n  />\n  <button @click=\"more\">더보기</button>\n\n  <div class=\"footer\">\n    <ul class=\"footer-button-plus\">\n      <!-- image만 받는 제한은 아니고 이미지 파일만 뜨게끔 설정하는 것이라서 근본적인 해결책은 아니다. -->\n      <input\n        @change=\"upload\"\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        id=\"file\"\n        class=\"inputfile\"\n      />\n      <label for=\"file\" class=\"input-plus\">+</label>\n    </ul>\n  </div>\n\n  <!-- <div v-if=\"step == 0\">내용0</div>\n  <div v-if=\"step == 1\">내용1</div>\n  <div v-if=\"step == 2\">내용2</div>\n\n  <button @click=\"showing(0)\">버튼0</button>\n  <button @click=\"showing(1)\">버튼1</button>\n  <button @click=\"showing(2)\">버튼2</button> -->\n</template>\n\n<script>\nimport Container from \"./components/Container\";\nimport instaData from \"./assets/InstaData\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Container,\n  },\n  mounted(){\n    this.emitter.on('dataToApp',(e)=>{\n      console.log(e)\n    })\n  },\n  data() {\n    return {\n      instaData,\n      clicked: 0,\n      isShow0: true,\n      isShow1: false,\n      isShow2: false,\n      step: 0,\n      url: \"\",\n      content: \"write!\",\n      filter:'',\n    };\n  },\n  methods: {\n    more() {\n      axios\n        .get(`https://codingapple1.github.io/vue/more${this.clicked++}.json`)\n        .then((res) => {\n          //function대신 arrow function 사용하면 안에서 this가 바깥의 데이터를 의미한다.\n          //function은 this를 재정의한다.\n          this.instaData.push(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    // showing(num){\n    //   // console.log(num);\n    //   this.step=num;\n    // },\n    upload(e) {\n      // const file = e.target.files[0];\n      // const ext = file.name.split(\".\").pop();\n      // 유효성 검사 다시 만들어보기\n      // if (!['gif', 'jpg', 'jpeg', 'png', 'bmp' ,'ico', 'apng'].includes(ext)) {\n      //   alert(\"허용되지 않는 파일 형식입니다.\");\n      // }\n\n      //e.target.files를 통째로 넣으려고 하면 안됨.\n      //binary데이터를 다룰 때 blob이라는 object에 넣는다.\n      this.url = URL.createObjectURL(e.target.files[0]);\n      this.step++;\n    },\n    publish() {\n      var myPost = {\n        name: \"Kim Hyun\",\n        userImage: \"https://picsum.photos/100?random=3\",\n        postImage: this.url,\n        likes: 36,\n        date: \"May 15\",\n        liked: false,\n        content: this.content,\n        filter: \"\",\n      };\n      //array의 첫번째에 자료추가\n      this.instaData.unshift(myPost);\n      this.step = 0;\n    },\n    textChange(changedText) {\n      this.content = changedText;\n    },\n  },\n};\n</script>\n<style>\n/* @import 'style.css'; */\n\nbody {\n  margin: 0;\n}\nul {\n  padding: 5px;\n  list-style-type: none;\n}\n.logo {\n  width: 22px;\n  margin: auto;\n  display: block;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 13px;\n}\n.header {\n  width: 100%;\n  height: 40px;\n  background-color: white;\n  padding-bottom: 8px;\n  position: sticky;\n  top: 0;\n}\n.header-button-left {\n  color: skyblue;\n  float: left;\n  width: 50px;\n  padding-left: 20px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n.header-button-right {\n  color: skyblue;\n  float: right;\n  width: 50px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n.footer {\n  width: 100%;\n  position: sticky;\n  bottom: 0;\n  padding-bottom: 10px;\n  background-color: white;\n}\n.footer-button-plus {\n  width: 80px;\n  margin: auto;\n  text-align: center;\n  cursor: pointer;\n  font-size: 24px;\n  padding-top: 12px;\n}\n.sample-box {\n  width: 100%;\n  height: 600px;\n  background-color: bisque;\n}\n.inputfile {\n  display: none;\n}\n.input-plus {\n  cursor: pointer;\n}\n#app {\n  box-sizing: border-box;\n  font-family: \"consolas\";\n  margin-top: 60px;\n  width: 100%;\n  max-width: 460px;\n  margin: auto;\n  position: relative;\n  border-right: 1px solid #eee;\n  border-left: 1px solid #eee;\n}\n</style>\n"],"mappings":";OASSA,UAAuB;;EARzBC,KAAK,EAAC;AAAQ;;EACbA,KAAK,EAAC;AAAoB;;EAG1BA,KAAK,EAAC;AAAqB;gCAI/BC,mBAAA,CAA4C;EAAvCC,GAAuB,EAAvBH,UAAuB;EAACC,KAAK,EAAC;;;EAahCA,KAAK,EAAC;AAAQ;;EACbA,KAAK,EAAC;AAAoB;gCAU5BC,mBAAA,CAA8C;EAAvCE,GAAG,EAAC,MAAM;EAACH,KAAK,EAAC;GAAa,GAAC;;;;6DAhC1CC,mBAAA,CASM,OATNG,UASM,GARJH,mBAAA,CAEK,MAFLI,UAEK,GADHJ,mBAAA,CAAiC;IAA5BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,IAAI;KAAM,QAAM,E,GAE9BT,mBAAA,CAGK,MAHLU,UAGK,GAFOF,KAAA,CAAAC,IAAI,S,cAAdE,mBAAA,CAA8C;;IAAxBN,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,IAAI;KAAI,MAAI,K,mCAC/BD,KAAA,CAAAC,IAAI,S,cAAdE,mBAAA,CAAkD;;IAA5BN,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,SAAO,K,qCAE/CG,UAA4C,C,GAG9CC,mBAAA,qHAA8G,EAC9GC,YAAA,CAMEC,oBAAA;IALCC,SAAS,EAAEX,KAAA,CAAAW,SAAS;IACpBV,IAAI,EAAED,KAAA,CAAAC,IAAI;IACVW,GAAG,EAAEZ,KAAA,CAAAY,GAAG;IACRC,OAAO,EAAEb,KAAA,CAAAa,OAAO;IAChBC,MAAI,EAAET,QAAA,CAAAU;8EAETvB,mBAAA,CAAkC;IAAzBK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAW,IAAA,IAAAX,QAAA,CAAAW,IAAA,IAAAZ,IAAA,CAAI;KAAE,KAAG,GAEzBZ,mBAAA,CAaM,OAbNyB,UAaM,GAZJzB,mBAAA,CAWK,MAXL0B,UAWK,GAVHV,mBAAA,4DAA+D,EAC/DhB,mBAAA,CAOE;IANC2B,QAAM,EAAArB,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAe,MAAA,IAAAf,QAAA,CAAAe,MAAA,IAAAhB,IAAA,CAAM;IACfiB,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,SAAS;IAChBC,QAAQ,EAAR,EAAQ;IACRC,EAAE,EAAC,MAAM;IACTjC,KAAK,EAAC;qCAERkC,UAA8C,C,KAIlDjB,mBAAA,6PAM4C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}